service: laravel

provider:
  name: aws
  # The AWS region in which to deploy (us-east-1 is the default)
  region: us-east-1
  # The stage of the application, e.g. dev, production, stagingâ€¦ ('dev' is the default)
  stage: dev
  runtime: provided
  environment:
    FILESYSTEM_DRIVER: s3
    APP_ENV: production
    APP_DEBUG: true # set to false when moving to production
    APP_KEY: 'base64:/EStlF5sExBpWdQ3eB/h+F2zzKGDc5bvDzwe0KD8ZPg='
    WINK_DB_CONNECTION: mysql
    DB_CONNECTION: mysql
    DB_HOST: 'studios-rds.c0rrqknh2fu9.us-east-1.rds.amazonaws.com'
    DB_PORT: 3306
    DB_DATABASE: rfountain
    DB_USERNAME: admin
    DB_PASSWORD: ${ssm:rfountain_db_password}
    AWS_BUCKET: # environment variable for Laravel
      Ref: Assets
    ASSET_URL: 'https://rfountain.net.s3.amazonaws.com'

  iamRoleStatements:
    # Allow Lambda to read and write files in the S3 buckets
    - Effect: Allow
      Action: s3:*
      Resource:
        - Fn::GetAtt: Storage.Arn # the storage bucket
        - Fn::Join: ['', [Fn::GetAtt: Storage.Arn, '/*']] # everything in the storage bucket

resources:
  Resources:
    Assets:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: rfountain.net
    AssetsBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref Assets # References the bucket we defined above
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: '*' # everyone
              Action: 's3:GetObject' # to read
              Resource: !Join ['/', [!GetAtt Assets.Arn, '*']] # things in the bucket
              # alternatively you can write out Resource: 'arn:aws:s3:::<bucket-name>/*'
    Storage:
      Type: AWS::S3::Bucket

package:
  # Directories to exclude from deployment
  exclude:
    - node_modules/**
    - public/storage
    - resources/js/**
    - resources/sass/**
    - storage/**
    - tests/**

functions:
  # This function runs the Laravel website/API
  web:
    handler: public/index.php
    timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
    layers:
      - ${bref:layer.php-74-fpm}
    events:
      - http: 'ANY /'
      - http: 'ANY /{proxy+}'
  # This function lets us run artisan commands in Lambda
  artisan:
    handler: artisan
    timeout: 120 # in seconds
    layers:
      - ${bref:layer.php-74} # PHP
      - ${bref:layer.console} # The "console" layer

plugins:
  # We need to include the Bref plugin
  - ./vendor/bref/bref
