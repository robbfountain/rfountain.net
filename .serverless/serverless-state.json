{
  "service": {
    "service": "laravel",
    "serviceObject": {
      "name": "laravel"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([^{}]+?)}",
      "name": "aws",
      "region": "us-east-1",
      "runtime": "provided",
      "environment": {
        "FILESYSTEM_DRIVER": "s3",
        "APP_ENV": "production",
        "APP_DEBUG": true,
        "APP_KEY": "base64:/EStlF5sExBpWdQ3eB/h+F2zzKGDc5bvDzwe0KD8ZPg=",
        "WINK_DB_CONNECTION": "mysql",
        "DB_CONNECTION": "mysql",
        "DB_HOST": "studios-rds.c0rrqknh2fu9.us-east-1.rds.amazonaws.com",
        "DB_PORT": 3306,
        "DB_DATABASE": "rfountain",
        "DB_USERNAME": "admin",
        "DB_PASSWORD": "FIsObRxGD5Vr9Y1lcZDq",
        "AWS_BUCKET": {
          "Ref": "Assets"
        },
        "ASSET_URL": "https://rfountain.net.s3.amazonaws.com"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": "s3:*",
          "Resource": [
            {
              "Fn::GetAtt": "Storage.Arn"
            },
            {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::GetAtt": "Storage.Arn"
                  },
                  "/*"
                ]
              ]
            }
          ]
        }
      ],
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "WebLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/laravel-dev-web"
            }
          },
          "ArtisanLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/laravel-dev-artisan"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "laravel",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/laravel-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/laravel-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "laravel",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "WebLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/laravel/dev/1596743396217-2020-08-06T19:49:56.217Z/laravel.zip"
              },
              "FunctionName": "laravel-dev-web",
              "Handler": "public/index.php",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "provided",
              "Timeout": 28,
              "Environment": {
                "Variables": {
                  "FILESYSTEM_DRIVER": "s3",
                  "APP_ENV": "production",
                  "APP_DEBUG": true,
                  "APP_KEY": "base64:/EStlF5sExBpWdQ3eB/h+F2zzKGDc5bvDzwe0KD8ZPg=",
                  "WINK_DB_CONNECTION": "mysql",
                  "DB_CONNECTION": "mysql",
                  "DB_HOST": "studios-rds.c0rrqknh2fu9.us-east-1.rds.amazonaws.com",
                  "DB_PORT": 3306,
                  "DB_DATABASE": "rfountain",
                  "DB_USERNAME": "admin",
                  "DB_PASSWORD": "FIsObRxGD5Vr9Y1lcZDq",
                  "AWS_BUCKET": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"AWS_BUCKET\"]"
                  },
                  "ASSET_URL": "https://rfountain.net.s3.amazonaws.com"
                }
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:209497400698:layer:php-74-fpm:12"
              ]
            },
            "DependsOn": [
              "WebLogGroup"
            ]
          },
          "WebLambdaVersionFvKcnXdjTv5zu7JnQHuIpw5bG9xRFbLRMTzQHnqNvtg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WebLambdaFunction"
              },
              "CodeSha256": "ysC8YxrO7knmkER2OUJ5iRJ5kBUvgdYOiIbwMh+xBOk="
            }
          },
          "ArtisanLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/laravel/dev/1596743396217-2020-08-06T19:49:56.217Z/laravel.zip"
              },
              "FunctionName": "laravel-dev-artisan",
              "Handler": "artisan",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "provided",
              "Timeout": 120,
              "Environment": {
                "Variables": {
                  "FILESYSTEM_DRIVER": "s3",
                  "APP_ENV": "production",
                  "APP_DEBUG": true,
                  "APP_KEY": "base64:/EStlF5sExBpWdQ3eB/h+F2zzKGDc5bvDzwe0KD8ZPg=",
                  "WINK_DB_CONNECTION": "mysql",
                  "DB_CONNECTION": "mysql",
                  "DB_HOST": "studios-rds.c0rrqknh2fu9.us-east-1.rds.amazonaws.com",
                  "DB_PORT": 3306,
                  "DB_DATABASE": "rfountain",
                  "DB_USERNAME": "admin",
                  "DB_PASSWORD": "FIsObRxGD5Vr9Y1lcZDq",
                  "AWS_BUCKET": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"AWS_BUCKET\"]"
                  },
                  "ASSET_URL": "https://rfountain.net.s3.amazonaws.com"
                }
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:209497400698:layer:php-74:12",
                "arn:aws:lambda:us-east-1:209497400698:layer:console:26"
              ]
            },
            "DependsOn": [
              "ArtisanLogGroup"
            ]
          },
          "ArtisanLambdaVersionyG5JsdM66M4yIkYgT4rl0KuH6KlNQe8wueetEQqfU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ArtisanLambdaFunction"
              },
              "CodeSha256": "ysC8YxrO7knmkER2OUJ5iRJ5kBUvgdYOiIbwMh+xBOk="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-laravel",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WebLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WebLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1596743384553": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodAny",
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "WebLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WebLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Assets": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "rfountain.net"
            }
          },
          "AssetsBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "Assets"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "s3:GetObject",
                    "Resource": {
                      "Fn::Join": [
                        "/",
                        [
                          {
                            "Fn::GetAtt": [
                              "Assets",
                              "Arn"
                            ]
                          },
                          "*"
                        ]
                      ]
                    }
                  }
                ]
              }
            }
          },
          "Storage": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "WebLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WebLambdaVersionFvKcnXdjTv5zu7JnQHuIpw5bG9xRFbLRMTzQHnqNvtg"
            }
          },
          "ArtisanLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ArtisanLambdaVersionyG5JsdM66M4yIkYgT4rl0KuH6KlNQe8wueetEQqfU"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "./vendor/bref/bref"
    ],
    "pluginsData": {},
    "functions": {
      "web": {
        "handler": "public/index.php",
        "timeout": 28,
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"WebLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [
          {
            "http": "ANY /"
          },
          {
            "http": "ANY /{proxy+}"
          }
        ],
        "name": "laravel-dev-web",
        "package": {},
        "memory": 1024,
        "runtime": "provided",
        "vpc": {},
        "versionLogicalId": "WebLambdaVersionFvKcnXdjTv5zu7JnQHuIpw5bG9xRFbLRMTzQHnqNvtg"
      },
      "artisan": {
        "handler": "artisan",
        "timeout": 120,
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ArtisanLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [],
        "name": "laravel-dev-artisan",
        "package": {},
        "memory": 1024,
        "runtime": "provided",
        "vpc": {},
        "versionLogicalId": "ArtisanLambdaVersionyG5JsdM66M4yIkYgT4rl0KuH6KlNQe8wueetEQqfU"
      }
    },
    "resources": {
      "Resources": {
        "Assets": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "rfountain.net"
          }
        },
        "AssetsBucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "Assets"
            },
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": "s3:GetObject",
                  "Resource": {
                    "Fn::Join": [
                      "/",
                      [
                        {
                          "Fn::GetAtt": [
                            "Assets",
                            "Arn"
                          ]
                        },
                        "*"
                      ]
                    ]
                  }
                }
              ]
            }
          }
        },
        "Storage": {
          "Type": "AWS::S3::Bucket"
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "layers": {},
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "package": {
        "exclude": [
          "node_modules/**",
          "public/storage",
          "resources/js/**",
          "resources/sass/**",
          "storage/**",
          "tests/**"
        ],
        "artifact": "/Users/robb/Code/rfountain/.serverless/laravel.zip",
        "artifactDirectoryName": "serverless/laravel/dev/1596743396217-2020-08-06T19:49:56.217Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "layers": {
        "$ref": "$[\"service\"][\"layers\"]"
      },
      "configValidationMode": "warn"
    },
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/robb/Code/rfountain/.serverless/laravel.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/laravel/dev/1596743396217-2020-08-06T19:49:56.217Z",
    "artifact": "laravel.zip"
  }
}